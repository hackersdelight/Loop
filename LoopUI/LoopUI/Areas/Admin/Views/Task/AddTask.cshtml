@using Loop.Interfaces
@using LoopUI.Models
@model LoopUI.Models.Task
@{
	ViewBag.Title = "Add task";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
	<fieldset>
		@Html.ValidationSummary(true)
		<legend>Task</legend>
		<div class="editor-label">
			@Html.LabelFor(model => model.Number)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Number)
			@Html.ValidationMessageFor(model => model.Number)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Title)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Title)
			@Html.ValidationMessageFor(model => model.Title)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Description)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Description)
			@Html.ValidationMessageFor(model => model.Description)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Steps)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Steps)
			@Html.ValidationMessageFor(model => model.Steps)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Background)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Background)
			@Html.ValidationMessageFor(model => model.Background)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Estimation)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Estimation)
			@Html.ValidationMessageFor(model => model.Estimation)
		</div>
		<div class="editor-label">
			@Html.LabelFor(x => x.Prioroty)
		</div>
		<div class="editor-field">
			@if (ViewBag.TaskPriority != null)
	 {
				@Html.DropDownListFor(model => model.Prioroty.Id, new SelectList(ViewBag.TaskPriority, "Value", "Text"));
	 }
		</div>
		<div class="editor-label">
			@Html.LabelFor(x => x.Status)
		</div>
		<div class="editor-field">
			@if (ViewBag.TaskStatus != null)
	 {
				@Html.DropDownListFor(x => x.Status.Id, new SelectList(ViewBag.TaskStatus, "Value", "Text"));
	 }
			<div class="editor-label">
				@Html.LabelFor(x => x.Assignment)
			</div>
			<div class="editor-field">
				@if (ViewBag.TaskStatus != null)
		{
					@Html.DropDownListFor(x => x.Assignment.Id, new SelectList(ViewBag.ActiveUsers, "Value", "Text"));
		}
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.IsActive)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.IsActive)
				@Html.ValidationMessageFor(model => model.IsActive)
			</div>
			<div class="editor-label">
				@Html.LabelFor(x => x.Comments)
			</div>
			<div class="editor-field">
				@Html.TextBox("comment")
			</div>
			<p>
				<input type="submit" value="Create" />
			</p>
	</fieldset>
}
<div>
	@Html.ActionLink("Back to List", "Index")
</div>
